x-common-env-vars:
  - &postgres-db
    POSTGRES_DB=ballsdex
  - &postgres-user
    POSTGRES_USER=ballsdex
  - &postgres-url
    "BALLSDEXBOT_DB_URL=postgres://ballsdex:${POSTGRES_PASSWORD}@postgres:5432/ballsdex"

services:
  bot:
    restart: "no"
    image: ballsdex
    build: .
    environment:
      - *postgres-url
    depends_on:
      migration:
        condition: service_completed_successfully
      postgres-db:
        condition: service_healthy
    # ports:
    #   - "15260:15260"
    networks:
      - internal
    volumes:
      - "./:/code"
    tty: true
    working_dir: /code/
    command: python3 -m ballsdex

  admin-panel:
    image: ballsdex
    build: .
    ports:
      - "8000:8000"
    networks:
      - internal
    environment:
      - *postgres-url
      # if serving the admin panel online, copy the file "production.example.py" and uncomment
      # - DJANGO_SETTINGS_MODULE=admin_panel.settings.production
    depends_on:
      migration:
        condition: service_completed_successfully
      postgres-db:
        condition: service_healthy
    volumes:
      - "./:/code"
    tty: true
    working_dir: /code/admin_panel
    command: "python3 -m uvicorn admin_panel.asgi:application --host 0.0.0.0"

  migration:
    image: ballsdex
    build: .
    networks:
      - internal
    environment:
      - *postgres-url
    volumes:
      - ./:/code
    depends_on:
      postgres-db:
        condition: service_healthy
    working_dir: /code/admin_panel
    command: >
      sh -c "
      python3 manage.py migrate --no-input --fake-initial &&
      python3 manage.py collectstatic --no-input
      "

  postgres-db:
    image: postgres
    restart: always
    hostname: postgres
    shm_size: 1g
    environment:
      - *postgres-db
      - *postgres-user
      - POSTGRES_PASSWORD
    # WARNING: before exposing ports, change the default db password in the .env file!
    # ports:
    #   - "5432:5432"
    networks:
      - internal
    volumes:  # Persist the db data
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ballsdex}"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-backup:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres
    volumes:
      - ./pgbackups:/backups
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - internal
    environment:
      - *postgres-db
      - *postgres-user
      - POSTGRES_PASSWORD
      - POSTGRES_HOST=postgres
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=3928

  # Uncomment to enable gateway proxy feature and
  # add "gateway-url: ws://gateway_proxy:5421" to your config.yaml
  # Also change tag corresponding to your platform if not x86-64
  #
  # gateway-proxy:
  #   container_name: gateway_proxy
  #   image: ghcr.io/martinebot/gateway-proxy:x86-64
  #   restart: always
  #   volumes:
  #     - ./gatewayproxy/config.json:/config.json
  #   networks:
  #     - internal

volumes:
  database-data:
  cache-data:

networks:
  internal:
