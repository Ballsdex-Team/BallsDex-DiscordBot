{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Ballsdex configuration",
    "description": "Core settings for the Ballsdex Discord bot",
    "type": "object",
    "required": [
        "discord-token",
        "text-prefix",
        "about",
        "collectible-name",
        "bot-name",
        "players-group-cog-name",
        "admin-command",
        "prometheus",
        "owners"
    ],
    "additionalProperties": false,
    "properties": {
        "discord-token": {
            "description": "The Discord bot token",
            "type": "string",
            "minLength": 70,
            "maxLength": 72
        },
        "text-prefix": {
            "description": "The prefix for old text commands",
            "type": "string",
            "minLength": 1,
            "default": "b."
        },
        "about": {
            "type": "object",
            "description": "Information used in /about",
            "additionalProperties": false,
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Defines the beginning of the description of /about. The other parts are automatically generated"
                },
                "github-link": {
                    "type": "string",
                    "description": "A GitHub repository for source code, if using a fork",
                    "format": "uri"
                },
                "discord-invite": {
                    "type": "string",
                    "description": "A Discord server to link for support",
                    "pattern": "^https?://(discord.gg|discord(app)?.com/invite)/[a-zA-Z0-9]+$"
                },
                "terms-of-service": {
                    "type": "string",
                    "description": "A link to the terms of service",
                    "format": "uri"
                },
                "privacy-policy": {
                    "type": "string",
                    "description": "A link to the privacy policy",
                    "format": "uri"
                }
            },
            "required": [
                "description",
                "github-link",
                "discord-invite",
                "terms-of-service",
                "privacy-policy"
            ]
        },
        "collectible-name": {
            "type": "string",
            "description": "The name of the collectible, used everywhere except command descriptions.",
            "default": "countryball"
        },
        "max-favorites": {
            "type": "integer",
            "default": 50,
            "description": "Maximum number of favorite countryballs allowed per player",
            "minimum": 0
        },
        "favorited-collectible-emoji": {
            "type": "string",
            "default": "❤️",
            "description": "The emoji used to represent a favorited countryball"
        },
        "max-attack-bonus": {
            "type": "integer",
            "description": "The biggest/smallest attack bonus that a spawned countryball can have.",
            "default": 20
        },
        "max-health-bonus": {
            "type": "integer",
            "description": "The biggest/smallest health bonus that a spawned countryball can have.",
            "default": 20
        },
        "plural-collectible-name": {
            "type": "string",
            "description": "The plural name of the collectible, used everywhere except command descriptions.",
            "default": "countryballs"
        },
        "show-rarity": {
            "type": "boolean",
            "description": "Enables the display of rarity in the top right hand corner of a card. Should not be used with economies.",
            "default": false
        },
        "bot-name": {
            "type": "string",
            "description": "The name of the bot, used in places such as the /completion command",
            "default": "BallsDex"
        },
        "players-group-cog-name": {
            "type": "string",
            "description": "Name of the slash command managing the collectibles (list, info, completion...). Do not add a leading slash!",
            "default": "balls"
        },
        "admin-command": {
            "type": "object",
            "description": "Manages access to the admin command",
            "additionalProperties": false,
            "properties": {
                "guild-ids": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "IDs of guilds with the /admin command registered",
                    "items": {
                        "$ref": "#/$defs/discord-id"
                    }
                },
                "root-role-ids": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "IDs of roles with full access to /admin",
                    "items": {
                        "$ref": "#/$defs/discord-id"
                    }
                },
                "admin-role-ids": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "IDs of roles with partial access to /admin: blacklist control and guilds ownership inspection",
                    "items": {
                        "$ref": "#/$defs/discord-id"
                    }
                }
            },
            "required": [
                "guild-ids",
                "root-role-ids",
                "admin-role-ids"
            ]
        },
        "prometheus": {
            "type": "object",
            "description": "Prometheus metrics configuration",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable Prometheus metrics server",
                    "default": false
                },
                "host": {
                    "type": "string",
                    "description": "Host to bind to",
                    "default": "0.0.0.0"
                },
                "port": {
                    "type": "integer",
                    "description": "Port to bind to",
                    "default": 15260
                }
            }
        },
        "log-channel": {
            "type": [
                "integer",
                "null"
            ],
            "description": "ID of the channel to log events to",
            "$ref": "#/$defs/discord-id"
        },
        "owners": {
            "type": "object",
            "description": "Manages ownership of the bot",
            "additionalProperties": false,
            "properties": {
                "team-members-are-owners": {
                    "type": "boolean",
                    "description": "Whether to consider Discord developer team members as owners",
                    "default": false
                },
                "co-owners": {
                    "type": [
                        "array",
                        "null"
                    ],
                    "description": "IDs of users with ownership",
                    "items": {
                        "$ref": "#/$defs/discord-id"
                    }
                },
                "hide-owner": {
                    "type": "boolean",
                    "default": false,
                    "description": "Hides the owner name in /about"
                }
            }
        },
        "spawn-manager": {
            "$ref": "#/$defs/python-path",
            "description": "Override the default spawn manager with your own implementation. Must be an importable Python path to a SpawnManager class.",
            "default": "ballsdex.packages.countryballs.spawn.SpawnManager"
        },
        "packages": {
            "type": "array",
            "description": "List of packages to load on start. Must be importable Python paths to a discord.py package.",
            "items": {
                "$ref": "#/$defs/python-path"
            }
        },
        "admin-panel": {
            "type": "object",
            "description": "Django admin panel settings",
            "additionalProperties": false,
            "properties": {
                "client-id": {
                    "$ref": "#/$defs/discord-id",
                    "type": [
                        "integer",
                        "null"
                    ],
                    "description": "To enable Discord OAuth2, fill the ID of your Discord application here."
                },
                "client-secret": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "To enable Discord OAuth2, fill the OAuth2 secret of your Discord application here.",
                    "pattern": "^[a-zA-Z0-9-_]{32}$"
                },
                "webhook-url": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Link to a Discord webhook for admin panel notifications",
                    "pattern": "^https://discord.com/api/webhooks/[0-9]{17,22}/[a-zA-Z0-9-_]{68}$"
                },
                "url": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "URL to your admin panel. If null, disables all hyperlinks to the admin panel in the bot.",
                    "$ref": "#/$defs/url"
                }
            }
        },
        "sentry": {
            "type": "object",
            "description": "Configures sentry for reporting logging events",
            "additionalProperties": false,
            "properties": {
                "dsn": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "URL to your sentry DSN (Data Source Name)"
                },
                "environment": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "An identifier to use for the environment the bot runs in.",
                    "default": "production"
                }
            }
        },
        "catch": {
            "type": "object",
            "description": "Customize the messages sent when attempting to catch a countryball",
            "additionalProperties": false,
            "properties": {
                "caught_msgs": {
                    "type": "array",
                    "description": "A list of messages to use when a countryball is caught. ID and stats are appended to these.\n{user}: Mention of interacting user\n{collectible}: Collectible name\n{collectibles}: Plural collectible name",
                    "default": [
                        "{user} You caught **{ball}**!"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "wrong_msgs": {
                    "type": "array",
                    "description": "A list of messages to use when a wrong name was attempted.\n{user}: Mention of interacting user\n{wrong}: The name attempted\n{collectible}: Collectible name\n{collectibles}: Plural collectible name",
                    "default": [
                        "{user} Wrong name!"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "spawn_msgs": {
                    "type": "array",
                    "description": "A list of messages to use when spawning an item.\n{collectible}: Collectible name\n{collectibles}: Plural collectible name",
                    "default": [
                        "A wild {collectible} appeared!"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "slow_msgs": {
                    "type": "array",
                    "description": "A list of messages to use when a user attempted to catch a ball, but someone else caught it before.\n{user}: Mention of interacting user\n{collectible}: Collectible name\n{collectibles}: Plural collectible name",
                    "default": [
                        "{user} Sorry, this {collectible} was caught already!"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "$defs": {
        "python-path": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)+$"
        },
        "discord-id": {
            "type": "integer",
            "minimum": 10000000000000000,
            "maximum": 99999999999999999999
        },
        "url": {
            "type": "string",
            "pattern": "^https?://[^\n\r\t\\?/]+$"
        }
    }
}